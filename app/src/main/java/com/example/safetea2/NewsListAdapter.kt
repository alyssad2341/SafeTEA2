package com.example.safetea2

import android.content.Intent
import android.net.Uri
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView
import com.bumptech.glide.Glide
import com.example.safetea2.model.Article
import java.text.ParseException
import java.text.SimpleDateFormat
import java.util.Locale

//Adapt output from NewsAPI call to RecyclerView in UniversityDetailsActivity
class NewsListAdapter(private var articles: List<Article>) :
    RecyclerView.Adapter<NewsListAdapter.NewsViewHolder>() {
    class NewsViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val title: TextView = itemView.findViewById(R.id.newsTitle)
        val description: TextView = itemView.findViewById(R.id.newsDescription)
        val image: ImageView = itemView.findViewById(R.id.newsImage)
        val date: TextView = itemView.findViewById(R.id.newsDate)
        val link: TextView = itemView.findViewById(R.id.newsLink)
    }

    // Generated by ChatGPT
    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): NewsViewHolder {
        val view = LayoutInflater.from(parent.context)
            .inflate(R.layout.item_news, parent, false)
        return NewsViewHolder(view)
    }

    override fun onBindViewHolder(holder: NewsViewHolder, position: Int) {
        val article = articles[position]
        holder.title.text = article.title
        holder.description.text = article.description ?: "No description available"

        // Generated by ChatGPT
        Glide.with(holder.itemView.context)
            .load(article.urlToImage)
            .into(holder.image)

        val formattedDate = article.publishedAt?.let { formatDate(it) } ?: "No date available"
        holder.date.text = formattedDate

        //Open link in browser once selected
        holder.link.setOnClickListener {
            val url = article.url
            if (url != null) {
                val intent = Intent(Intent.ACTION_VIEW, Uri.parse(url))
                holder.itemView.context.startActivity(intent)
            }
        }
    }

    override fun getItemCount(): Int = articles.size

    fun updateArticles(newArticles: List<Article>) {
        articles = newArticles
        notifyDataSetChanged()
    }

    // Function to change date format
    private fun formatDate(date: String): String {
        val inputFormat = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.US)
        val outputFormat = SimpleDateFormat("MMM dd, yyyy", Locale.US)
        return try {
            val parsedDate = inputFormat.parse(date)
            outputFormat.format(parsedDate)
        } catch (e: ParseException) {
            "Invalid date"
        }
    }
}
